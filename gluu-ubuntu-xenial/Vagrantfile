# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

# The hostname and IP mapping must exist in 
# /etc/hosts

#ip = "192.168.0.10"
#ip_pattern = "^172\.18\.72\.120"

ip = "192.168.0.10"
ip_pattern = "^192\.168\.0\.10"
hostname = "gluu.local"


ansible_extra_vars = {
     server_ip: ip,
     server_ip_pattern: ip_pattern,
     server_hostname: hostname,
     ldap_pass: "admin123",
     cert_org_name: "ACME",
     cert_country_code: "US",
     cert_city: "City",
     cert_state: "CA",
     gluu_version: "gluu-server-3.1.6.sp1",
     gluu_service_name: "gluu-server-3.1.6.service",
     gluu_service: "gluu-server-3.1.6"
}


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    config.vm.box = "ubuntu/xenial64"
    config.disksize.size = '40GB'

        #Use this network config when you need a network bridge
    #config.vm.network "public_network", :bridge => "Intel(R) Ethernet Connection (7) I219-LM", ip: ip


        #Use this network config when you have port collisions.
    config.vm.network "private_network", ip: ip

    #config.vm.hostname = hostname

    config.vm.network "forwarded_port", guest: 443, host: 443
    config.vm.network "forwarded_port", guest: 80, host: 80
    config.vm.network "forwarded_port", guest: 9999, host: 9999
    config.vm.network "forwarded_port", guest: 9998, host: 9998

    config.vm.provider "virtualbox" do |v|
        v.cpus = 2
        v.memory = 8196
    end

    if Vagrant::Util::Platform.windows?
        config.vm.provision :guest_ansible do |ansible|
          ansible.playbook = "ansible/site.yml"
          ansible.verbose = "-vvv"
          ansible.extra_vars = ansible_extra_vars
        end
    else
        config.vm.provision :ansible do |ansible|
          ansible.playbook = "ansible/site.yml"
          ansible.verbose = "-vvv"
          ansible.extra_vars = ansible_extra_vars
        end
    end

    config.vm.synced_folder ".", "/vagrant", :mount_options => ["dmode=777", "fmode=666"]
end
